buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}


allprojects {

    // Apply the java plugin to add support for Java

    apply plugin: 'maven-publish'
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'com.jfrog.bintray'

    
    group = 'lx.cfdi'
    version = "1.0.0"

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    // custom tasks for creating source/javadoc jars
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    // add javadoc/source jar tasks as artifacts
    artifacts {
        archives sourcesJar, javadocJar
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                
                artifact sourcesJar 
                artifact javadocJar
            }
        }
    }

    bintray {
        user = bintrayUser
        key = bintrayApiKey
        publications = ['maven']
        publish = true
        override = true
        pkg {
            repo = 'maven'
            name = "${project.name}"
            desc = "${project.description}"
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/rcancino/lx-cfdi.git'
            labels = ['Comprobantes fiscales digitales CFDIs']
            version {
                name = "${project.version}"
                desc = "${project.description}"
                released = new java.util.Date().format('yyyy-MM-dd\'T\'HH:mm:ss.SSSZZ')
            }
        }
    }

    task printProperties << {
      println 'Bintray user: '+ bintrayUser
      println "Bingray API Key ${bintrayApiKey}"
      println "${project.name}"

    }

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }

}

subprojects { project ->

    if (project.name != 'utils' || project.name != 'play') {
        apply plugin: 'com.github.jacobono.jaxb'

        jaxb {
            xsdDir = "${project.name}/src/resources"
            xjc {
                generatePackage = "lx.cfdi.${project.name}"
            }
        }

        dependencies {
            jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
            jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
            jaxb 'javax.xml.bind:jaxb-api:2.2.7'
            //compile project(':utils')
        }
    }

    dependencies {
        // mandatory dependencies for using Spock
        compile 'org.codehaus.groovy:groovy-all:2.4.10'
        testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    }

}

project('utils') {
    description = """
        Utilerias para la generacion de CFDIs
    """
}

project('v32') {
    description = """
      Modelo de datos (Entity model)  para la genracion de comprobante fiscal digital  version 3.2
    """
    dependencies {
        compile project(':utils')
    }
}

project('v33') {
    description = """
        Modelo de datos (Entity model)  para la genracion de comprobante fiscal digital  version 3.3
    """
    dependencies {
        compile project(':utils')
    }
}
project('play') {
    description = """
        Pruebas diversas (Proof of concept)  para las librerias de CFDI's
    """
    dependencies {
        compile project(':utils')
        compile project(':v32')
    }
}


